{"version":3,"sources":["reportWebVitals.js","hooks/getWeather.js","components/Form.js","components/Header.js","components/Weather.js","WeatherApp.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","getWeather","city","a","fetch","resp","json","data","cod","Form","search","setSearch","setConsult","setWeather","useState","error","setError","msgError","setMsgError","handleSubmit","e","preventDefault","api","onSubmit","className","type","name","id","placeholder","value","onChange","target","htmlFor","Header","title","href","Weather","weather","img","setImg","imgCode","main","useEffect","kelvin","parseFloat","temp","toFixed","temp_max","temp_min","WeatherApp","consult","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uLAYeA,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,4CCNDQ,EAAU,uCAAG,WAAOC,GAAP,iBAAAC,EAAA,sEAEHC,MAAM,qDAAD,OAAsDF,EAAtD,4CAFF,cAEhBG,EAFgB,gBAGHA,EAAKC,OAHF,UAKL,SAFXC,EAHgB,QAKbC,IALa,2CAMX,GANW,iCAQXD,GARW,4CAAH,sD,OCGVE,EAAO,SAAC,GAAmD,IAAjDC,EAAgD,EAAhDA,OAAQC,EAAwC,EAAxCA,UAAWC,EAA6B,EAA7BA,WAAYC,EAAiB,EAAjBA,WAAiB,EAEvCC,oBAAS,GAF8B,mBAE3DC,EAF2D,KAEpDC,EAFoD,OAGjCF,mBAAS,IAHwB,mBAG3DG,EAH2D,KAGjDC,EAHiD,KAK3DhB,EAASQ,EAATR,KASFiB,EAAY,uCAAG,WAAMC,GAAN,eAAAjB,EAAA,yDACjBiB,EAAEC,iBAEW,KAATnB,EAHa,uBAIbc,GAAU,GACVE,EAAY,oCALC,0CASCjB,EAAYC,GATb,UASXoB,EATW,+BAYbN,GAAU,GACVE,EAAY,kBAbC,2BAiBjBF,GAAU,GACVH,EAAYS,GACZX,EAAU,CAAET,KAAM,KAClBU,GAAW,GApBM,4CAAH,sDAwBlB,OACI,uBAAMW,SAAWJ,EAAjB,UAEMJ,EAAQ,mBAAGS,UAAU,qBAAb,SAAoCP,IAAiB,KAE/D,sBAAKO,UAAU,sBAAf,UACI,uBACIC,KAAK,OACLC,KAAK,OACLC,GAAG,OACHC,YAAY,oBACZC,MAAQ3B,EACR4B,SA3CU,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACzBpB,EAAU,2BACHD,GADE,kBAEHqB,EAAOL,KAAQK,EAAOF,YA0CpB,uBAAOG,QAAQ,OAAf,uBAGJ,qBAAKR,UAAU,sBAAf,SACI,wBACIC,KAAK,SACLD,UAAU,uEAFd,kCCzDHS,EAAS,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACrB,OACI,8BACI,qBAAKV,UAAU,kCAAf,SACI,oBAAGW,KAAK,KAAKX,UAAU,aAAvB,cAAuCU,EAAvC,YCJHE,EAAU,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAAc,EAEZvB,mBAAS,IAFG,mBAE5BwB,EAF4B,KAEvBC,EAFuB,KAI9BC,EAAUH,EAAQA,QAAQ,GAAGI,KAEnCC,qBAAU,WACNH,EAAQC,KACT,CAAEA,IAR+B,IAU5Bd,EAAeW,EAAfX,KAAMe,EAASJ,EAATI,KAERE,EAAS,OAEf,OACI,qBAAKnB,UAAS,uCAAmCc,GAAjD,SACI,sBAAKd,UAAU,aAAf,UACI,iDAAqBE,EAArB,UACA,oBAAGF,UAAU,cAAb,UACMoB,WAAYH,EAAKI,KAAOF,EAAQ,IAAKG,QAAQ,GADnD,IACwD,+CAExD,8BAAMR,EAAN,OACA,oDAEMM,WAAYH,EAAKM,SAAWJ,EAAQ,IAAKG,QAAQ,GAFvD,IAE4D,+CAE5D,iDAEMF,WAAYH,EAAKO,SAAWL,EAAQ,IAAKG,QAAQ,GAFvD,IAE4D,qDC1B/DG,EAAa,WAAO,IAAD,EAEEnC,mBAAS,CAAEZ,KAAM,KAFnB,mBAEpBQ,EAFoB,KAEZC,EAFY,OAGIG,mBAAS,IAHb,mBAGpBuB,EAHoB,KAGXxB,EAHW,OAIIC,oBAAS,GAJb,mBAIpBoC,EAJoB,KAIXtC,EAJW,KAU5B,OAJA8B,qBAAU,cAEP,CAAEL,IAGD,qCACI,cAAC,EAAD,CACIH,MAAM,sBAGV,qBAAKV,UAAU,kBAAf,SACI,qBAAKA,UAAU,YAAf,SACI,sBAAKA,UAAU,MAAf,UACI,qBAAKA,UAAU,aAAf,SACI,cAAC,EAAD,CACId,OAASA,EACTC,UAAYA,EACZC,WAAaA,EACbC,WAAaA,MAGrB,qBAAKW,UAAU,aAAf,SAEU0B,EACI,cAAC,EAAD,CAASb,QAAUA,IACnB,kBC9BtCc,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAG1B/D,M","file":"static/js/main.ccacc1e5.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","\r\nexport const getWeather = async (city) => {\r\n\r\n    const resp = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=6ea654de70b97198ff373da06eeef738`);\r\n    const data = await resp.json();\r\n\r\n    if (data.cod === \"404\") {\r\n        return false;\r\n    } else {\r\n        return data;\r\n    }\r\n\r\n};","import React, { useState } from 'react';\r\nimport { getWeather } from '../hooks/getWeather';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const Form = ({ search, setSearch, setConsult, setWeather }) => {\r\n    \r\n    const [ error, setError ] = useState(false);\r\n    const [ msgError, setMsgError ] = useState('');\r\n\r\n    const { city } = search;\r\n\r\n    const handleInputChange = ({ target }) => {\r\n        setSearch({\r\n            ...search,\r\n            [ target.name ]: target.value\r\n        });\r\n    };\r\n\r\n    const handleSubmit = async(e) => {\r\n        e.preventDefault();\r\n\r\n        if( city === '') {\r\n            setError( true );\r\n            setMsgError('Enter a correct city and country');\r\n            return;\r\n        }\r\n\r\n        const api = await getWeather( city );\r\n\r\n        if ( !api ) {\r\n            setError( true );\r\n            setMsgError('City not found');\r\n            return;\r\n        }\r\n\r\n        setError( false );\r\n        setWeather( api );\r\n        setSearch({ city: '' });\r\n        setConsult(true);\r\n           \r\n    };\r\n\r\n    return (\r\n        <form onSubmit={ handleSubmit }>\r\n\r\n            { error ? <p className=\"red darken-4 error\">{ msgError }</p> : null }\r\n\r\n            <div className=\"input-field col s12\">\r\n                <input \r\n                    type=\"text\"\r\n                    name=\"city\"\r\n                    id=\"city\"\r\n                    placeholder=\"Ex. Canada, CA...\"\r\n                    value={ city }\r\n                    onChange={ handleInputChange }\r\n                />\r\n                <label htmlFor=\"city\">City: </label>\r\n            </div>\r\n\r\n            <div className=\"input-field col s12\">\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"waves-effect waves-light btn-large btn-block yellow accent-4 col s12\"\r\n                >\r\n                    Search weather\r\n                </button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nForm.propTypes = {\r\n    search: PropTypes.object.isRequired,\r\n    setSearch: PropTypes.func.isRequired,\r\n    setConsult: PropTypes.func.isRequired,\r\n    setWeather: PropTypes.func.isRequired,\r\n};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const Header = ({ title }) => {\r\n    return (\r\n        <nav>\r\n            <div className=\"nav-wrapper light-blue darken-2\">\r\n                <a href=\"/#\" className=\"brand-logo\"> { title } </a>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nHeader.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n};","import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const Weather = ({ weather }) => {\r\n\r\n    const [ img, setImg ] = useState('');\r\n\r\n    const imgCode = weather.weather[0].main;\r\n\r\n    useEffect(() => {\r\n        setImg( imgCode )\r\n    }, [ imgCode ])\r\n    \r\n    const { name, main } = weather;\r\n\r\n    const kelvin = 273.15;\r\n\r\n    return (\r\n        <div className={`card-panel white col s12 img ${ img }`}>\r\n            <div className=\"black-text\">\r\n                <h2>The weather of { name } is:</h2>\r\n                <p className=\"temperatura\">\r\n                    { parseFloat( main.temp - kelvin, 10 ).toFixed(2) } <span> &#x2103; </span>\r\n                </p>\r\n                <p >{ img } </p>\r\n                <p>\r\n                    Temperature m√°x:\r\n                    { parseFloat( main.temp_max - kelvin, 10 ).toFixed(2) } <span> &#x2103; </span>\r\n                </p>\r\n                <p>\r\n                    Temperature min:\r\n                    { parseFloat( main.temp_min - kelvin, 10 ).toFixed(2) } <span> &#x2103; </span>\r\n                </p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nWeather.propTypes = {\r\n    weather: PropTypes.object.isRequired,\r\n};","import React, { useState, useEffect } from 'react';\r\nimport { Form } from './components/Form';\r\nimport { Header } from './components/Header';\r\nimport { Weather } from './components/Weather';\r\n\r\nexport const WeatherApp = () => {\r\n\r\n    const [ search, setSearch ] = useState({ city: '' });\r\n    const [ weather, setWeather ] = useState({});\r\n    const [ consult, setConsult ] = useState(false);\r\n    \r\n    useEffect(() => {\r\n        \r\n    }, [ weather ])\r\n\r\n    return (\r\n        <>\r\n            <Header \r\n                title=\"Weather React App\"\r\n            />\r\n\r\n            <div className=\"contenedor-form\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col m6 s12\">\r\n                            <Form \r\n                                search={ search }\r\n                                setSearch={ setSearch }\r\n                                setConsult={ setConsult }\r\n                                setWeather={ setWeather }\r\n                            />\r\n                        </div>\r\n                        <div className=\"col m6 s12\">\r\n                            { \r\n                                ( consult )\r\n                                    ? <Weather weather={ weather }/>\r\n                                    : null\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport { WeatherApp } from './WeatherApp';\n\nReactDOM.render(\n  <React.StrictMode>\n    <WeatherApp />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}